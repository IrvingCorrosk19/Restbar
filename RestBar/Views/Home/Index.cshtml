@model RestBar.Controllers.DashboardViewModel
@using RestBar.Helpers
@{
    ViewData["Title"] = "Dashboard RestBar";
}


<!-- Main Dashboard -->
<div class="dashboard-container">
    <div class="container-fluid">
        <!-- Quick Actions -->
        <div class="section-header">
            <h2>Acciones Rápidas</h2>
            <p>Accede rápidamente a las funciones principales</p>
        </div>
        
        <div class="row g-4 mb-5">
            <!-- Pedidos -->
            @if (Model.VisibleCards.Orders)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Order")" class="dashboard-card card-orders">
                        <div class="card-icon">
                            <i class="fas fa-shopping-cart"></i>
                        </div>
                        <div class="card-content">
                            <h3>Pedidos</h3>
                            <p>Gestión completa de órdenes</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Productos -->
            @if (Model.VisibleCards.Products)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Product")" class="dashboard-card card-products">
                        <div class="card-icon">
                            <i class="fas fa-box-open"></i>
                        </div>
                        <div class="card-content">
                            <h3>Productos</h3>
                            <p>Administra tu catálogo</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Mesas -->
            @if (Model.VisibleCards.Tables)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Table")" class="dashboard-card card-tables">
                        <div class="card-icon">
                            <i class="fas fa-chair"></i>
                        </div>
                        <div class="card-content">
                            <h3>Mesas</h3>
                            <p>Control de ocupación</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Usuarios y Roles -->
            @if (Model.VisibleCards.UserManagement)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("UserManagement", "User")" class="dashboard-card card-users-management">
                        <div class="card-icon">
                            <i class="fas fa-users-cog"></i>
                        </div>
                        <div class="card-content">
                            <h3>Usuarios & Roles</h3>
                            <p>Gestión de permisos</p>
                            <div class="card-badge">
                                @Html.RenderRoleBadge(Model.UserInfo.Role)
                            </div>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Asignaciones de Personal -->
            @if (Model.VisibleCards.UserAssignments)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "UserAssignment")" class="dashboard-card card-user-assignments">
                        <div class="card-icon">
                            <i class="fas fa-user-cog"></i>
                        </div>
                        <div class="card-content">
                            <h3>Asignaciones</h3>
                            <p>Personal y estaciones</p>
                            <div class="card-badge">
                                @Html.RenderRoleBadge(Model.UserInfo.Role)
                            </div>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Pagos -->
            @if (Model.VisibleCards.Payments)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "PaymentView")" class="dashboard-card card-payments">
                        <div class="card-icon">
                            <i class="fas fa-credit-card"></i>
                        </div>
                        <div class="card-content">
                            <h3>Pagos</h3>
                            <p>Gestión de cobranza</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Contabilidad -->
            @if (Model.VisibleCards.Accounting)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Accounting")" class="dashboard-card card-accounting">
                        <div class="card-icon">
                            <i class="fas fa-calculator"></i>
                        </div>
                        <div class="card-content">
                            <h3>Contabilidad</h3>
                            <p>Gestión financiera</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Cocina -->
            @if (Model.VisibleCards.Kitchen)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "StationOrders")" class="dashboard-card card-kitchen">
                        <div class="card-icon">
                            <i class="fas fa-utensils"></i>
                        </div>
                        <div class="card-content">
                            <h3>Cocina</h3>
                            <p>Gestión de preparación</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Inventario -->
            @if (Model.VisibleCards.Inventory)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Inventory")" class="dashboard-card card-inventory">
                        <div class="card-icon">
                            <i class="fas fa-boxes"></i>
                        </div>
                        <div class="card-content">
                            <h3>Inventario</h3>
                            <p>Control de stock</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Proveedores -->
            @if (Model.VisibleCards.Suppliers)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Supplier")" class="dashboard-card card-suppliers">
                        <div class="card-icon">
                            <i class="fas fa-truck"></i>
                        </div>
                        <div class="card-content">
                            <h3>Proveedores</h3>
                            <p>Gestión de suministros</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Órdenes de Compra -->
            @if (Model.VisibleCards.PurchaseOrders)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "PurchaseOrder")" class="dashboard-card card-purchase-orders">
                        <div class="card-icon">
                            <i class="fas fa-clipboard-list"></i>
                        </div>
                        <div class="card-content">
                            <h3>Órdenes de Compra</h3>
                            <p>Gestión de compras</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Transferencias -->
            @if (Model.VisibleCards.Transfers)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Transfer")" class="dashboard-card card-transfers">
                        <div class="card-icon">
                            <i class="fas fa-exchange-alt"></i>
                        </div>
                        <div class="card-content">
                            <h3>Transferencias</h3>
                            <p>Movimiento entre sucursales</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Ajustes Avanzados -->
            @if (Model.VisibleCards.AdvancedSettings)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "AdvancedSettings")" class="dashboard-card card-advanced-settings">
                        <div class="card-icon">
                            <i class="fas fa-cogs"></i>
                        </div>
                        <div class="card-content">
                            <h3>Ajustes Avanzados</h3>
                            <p>Configuración del sistema</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Reportes Avanzados -->
            @if (Model.VisibleCards.AdvancedReports)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "AdvancedReports")" class="dashboard-card card-advanced-reports">
                        <div class="card-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="card-content">
                            <h3>Reportes Avanzados</h3>
                            <p>Análisis detallado</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Reportes -->
            @if (Model.VisibleCards.Reports)
            {
                <div class="col-lg-3 col-md-6">
                    <a href="@Url.Action("Index", "Reports")" class="dashboard-card card-reports">
                        <div class="card-icon">
                            <i class="fas fa-chart-bar"></i>
                        </div>
                        <div class="card-content">
                            <h3>Reportes</h3>
                            <p>Análisis y estadísticas</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }
        </div>

        <!-- Management Section -->
        <div class="section-header">
            <h2>Gestión Avanzada</h2>
            <p>Herramientas de configuración y administración</p>
        </div>

        <div class="row g-4 mb-5">
            <!-- Categorías -->
            @if (Model.VisibleCards.Categories)
            {
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("Index", "Category")" class="dashboard-card card-categories">
                        <div class="card-icon">
                            <i class="fas fa-tags"></i>
                        </div>
                        <div class="card-content">
                            <h3>Categorías</h3>
                            <p>Organiza tus productos</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Estaciones -->
            @if (Model.VisibleCards.Stations)
            {
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("Index", "Station")" class="dashboard-card card-stations">
                        <div class="card-icon">
                            <i class="fas fa-fire"></i>
                        </div>
                        <div class="card-content">
                            <h3>Estaciones</h3>
                            <p>Cocina y preparación</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Áreas -->
            @if (Model.VisibleCards.Areas)
            {
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("Index", "Area")" class="dashboard-card card-areas">
                        <div class="card-icon">
                            <i class="fas fa-th-large"></i>
                        </div>
                        <div class="card-content">
                            <h3>Áreas</h3>
                            <p>Zonificación del local</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Compañías -->
            @if (Model.VisibleCards.Companies)
            {
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("Index", "Company")" class="dashboard-card card-companies">
                        <div class="card-icon">
                            <i class="fas fa-building"></i>
                        </div>
                        <div class="card-content">
                            <h3>Compañías</h3>
                            <p>Gestión empresarial</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }

            <!-- Sucursales -->
            @if (Model.VisibleCards.Branches)
            {
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("Index", "Branch")" class="dashboard-card card-branches">
                        <div class="card-icon">
                            <i class="fas fa-store"></i>
                        </div>
                        <div class="card-content">
                            <h3>Sucursales</h3>
                            <p>Múltiples ubicaciones</p>
                            <div class="card-btn">
                                <span>Acceder</span>
                                <i class="fas fa-arrow-right"></i>
                            </div>
                        </div>
                        <div class="card-overlay"></div>
                    </a>
                </div>
            }
        </div>

        <!-- Security Administration Section - Solo para Administradores -->
        @if (Model.VisibleCards.SecurityAdmin)
        {
            <div class="section-header security-section">
                <h2>
                    <i class="fas fa-shield-alt me-2"></i>
                    Administración de Seguridad
                </h2>
                <p>Control total sobre usuarios, roles y permisos del sistema</p>
            </div>
            
            <div class="row g-4 mb-5">
                <!-- Gestión Completa de Usuarios y Roles -->
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("UserManagement", "User")" class="dashboard-card card-security-primary">
                        <div class="card-icon-security">
                            <i class="fas fa-users-cog"></i>
                        </div>
                        <div class="card-content">
                            <h3>Usuarios & Roles</h3>
                            <p>Gestión completa de permisos</p>
                            <div class="security-features">
                                <span class="feature-badge">CRUD Usuarios</span>
                                <span class="feature-badge">Asignar Roles</span>
                                <span class="feature-badge">Control Acceso</span>
                            </div>
                            <div class="card-btn">
                                <span>Administrar</span>
                                <i class="fas fa-cog"></i>
                            </div>
                        </div>
                        <div class="card-overlay-security"></div>
                    </a>
                </div>

                <!-- Configuración de Políticas -->
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("Index", "Auth")" class="dashboard-card card-security-secondary">
                        <div class="card-icon-security">
                            <i class="fas fa-key"></i>
                        </div>
                        <div class="card-content">
                            <h3>Políticas de Acceso</h3>
                            <p>Configuración de seguridad</p>
                            <div class="security-features">
                                <span class="feature-badge">Middleware</span>
                                <span class="feature-badge">Autenticación</span>
                                <span class="feature-badge">Autorización</span>
                            </div>
                            <div class="card-btn">
                                <span>Configurar</span>
                                <i class="fas fa-tools"></i>
                            </div>
                        </div>
                        <div class="card-overlay-security"></div>
                    </a>
                </div>

                <!-- Monitoreo de Sesiones -->
                <div class="col-lg-4 col-md-6">
                    <a href="@Url.Action("Profile", "Auth")" class="dashboard-card card-security-tertiary">
                        <div class="card-icon-security">
                            <i class="fas fa-eye"></i>
                        </div>
                        <div class="card-content">
                            <h3>Sesiones Activas</h3>
                            <p>Monitoreo de usuarios conectados</p>
                            <div class="security-features">
                                <span class="feature-badge">Tiempo Real</span>
                                <span class="feature-badge">Logs</span>
                                <span class="feature-badge">Auditoría</span>
                            </div>
                            <div class="card-btn">
                                <span>Monitorear</span>
                                <i class="fas fa-chart-line"></i>
                            </div>
                        </div>
                        <div class="card-overlay-security"></div>
                    </a>
                </div>
            </div>
        }

        <!-- Stations Section -->
        @if (Model.VisibleCards.Kitchen && Model.Stations != null && Model.Stations.Any())
        {
            <div class="section-header">
                <h2>Estaciones de Trabajo</h2>
                <p>Acceso directo a las estaciones de preparación</p>
            </div>

            <div class="row g-4">
                @foreach (var station in Model.Stations)
                {
                    <div class="col-lg-4 col-md-6">
                        <a asp-controller="StationOrders" asp-action="Index" asp-route-stationName="@station.Name" asp-route-stationType="@station.Type" asp-route-stationIcon="@station.Icon" class="dashboard-card card-station-work">
                            <div class="card-icon">
                                <i class="fas fa-utensils"></i>
                            </div>
                            <div class="card-content">
                                <h3>@station.Name</h3>
                                <p>Pedidos pendientes</p>
                                <div class="card-btn">
                                    <span>Acceder</span>
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>
                            <div class="card-overlay"></div>
                        </a>
                    </div>
                }
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        /* ========================
           DISEÑO DE COCINA APLICADO AL HOME
           Estética sobria, elegante y profesional
           ======================== */
        :root {
            --home-primary: #1e40af;
            --home-primary-dark: #1e3a8a;
            --home-success: #059669;
            --home-success-light: #10b981;
            --home-warning: #d97706;
            --home-warning-light: #f59e0b;
            --home-danger: #dc2626;
            --home-danger-light: #ef4444;
            --home-info: #0891b2;
            --home-info-light: #06b6d4;
            --home-purple: #7c3aed;
            --home-purple-light: #8b5cf6;
            --home-pink: #db2777;
            --home-pink-light: #ec4899;
            --home-teal: #0d9488;
            --home-teal-light: #14b8a6;
            
            --home-bg-primary: #0f172a;
            --home-bg-secondary: #1e293b;
            --home-bg-tertiary: #334155;
            --home-surface: #475569;
            
            --home-text-primary: #f8fafc;
            --home-text-secondary: #cbd5e1;
            --home-text-muted: #94a3b8;
            
            --home-border: #475569;
            --home-border-light: #64748b;
            
            --home-shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.3);
            --home-shadow-md: 0 4px 16px rgba(0, 0, 0, 0.4);
            --home-shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.5);
            
            --home-radius-sm: 8px;
            --home-radius-md: 12px;
            --home-radius-lg: 16px;
            
            --home-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, var(--home-bg-primary) 0%, var(--home-bg-secondary) 100%);
            min-height: 100vh;
            color: var(--home-text-primary);
        }

        /* ========================
           HERO SECTION - ESTÉTICA COCINA
           ======================== */
        .hero-section {
            background: linear-gradient(135deg, var(--home-bg-primary) 0%, var(--home-bg-secondary) 100%);
            color: var(--home-text-primary);
            padding: 4rem 0;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
            border-bottom: 1px solid var(--home-border);
        }

        .hero-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, 
                rgba(30, 64, 175, 0.1) 0%,
                transparent 25%,
                transparent 50%,
                rgba(30, 64, 175, 0.1) 75%,
                transparent 100%
            );
            animation: backgroundShift 20s ease-in-out infinite;
        }

        .hero-section::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at 20% 80%, rgba(30, 64, 175, 0.2) 0%, transparent 50%),
                        radial-gradient(circle at 80% 20%, rgba(5, 150, 105, 0.2) 0%, transparent 50%);
            pointer-events: none;
        }

        @@keyframes backgroundShift {
            0%, 100% { 
                transform: translate(0, 0) rotate(0deg); 
                opacity: 0.5;
            }
            50% { 
                transform: translate(-30px, -30px) rotate(180deg); 
                opacity: 0.8;
            }
        }

        .hero-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            position: relative;
            z-index: 1;
        }

        .hero-text h1 {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, var(--home-text-primary) 0%, var(--home-info-light) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        .hero-text p {
            font-size: 1.4rem;
            margin-bottom: 2rem;
            color: var(--home-text-secondary);
            font-weight: 400;
        }

        .hero-stats {
            display: flex;
            gap: 2rem;
            flex-wrap: wrap;
            justify-content: flex-start;
        }

        .stat-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem 1.5rem;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid var(--home-border);
            border-radius: var(--home-radius-lg);
            backdrop-filter: blur(10px);
            transition: var(--home-transition);
            box-shadow: var(--home-shadow-sm);
        }

        .stat-item:hover {
            background: rgba(255, 255, 255, 0.1);
            border-color: var(--home-border-light);
            transform: translateY(-2px);
        }

        .stat-item i {
            font-size: 1.25rem;
            color: var(--home-info-light);
        }

        .stat-item span {
            font-weight: 500;
            color: var(--home-text-primary);
        }

        /* ========================
           DASHBOARD CONTAINER
           ======================== */
        .dashboard-container {
            padding: 3rem 0;
            background: linear-gradient(135deg, var(--home-bg-primary) 0%, var(--home-bg-secondary) 100%);
            position: relative;
        }

        .dashboard-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(circle at 30% 20%, rgba(30, 64, 175, 0.1) 0%, transparent 50%),
                        radial-gradient(circle at 70% 80%, rgba(5, 150, 105, 0.1) 0%, transparent 50%);
            pointer-events: none;
        }

        /* ========================
           SECTION HEADERS
           ======================== */
        .section-header {
            text-align: center;
            margin-bottom: 3rem;
            position: relative;
            z-index: 1;
        }

        .section-header h2 {
            font-size: 2.5rem;
            font-weight: 600;
            background: linear-gradient(135deg, var(--home-text-primary) 0%, var(--home-info-light) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
        }

        .section-header p {
            font-size: 1.1rem;
            color: var(--home-text-secondary);
            font-weight: 400;
        }

        /* ========================
           DASHBOARD CARDS - ESTÉTICA COCINA
           ======================== */
        .dashboard-card {
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, var(--home-bg-tertiary) 100%);
            border: 1px solid var(--home-border);
            border-radius: var(--home-radius-lg);
            padding: 2rem;
            height: 100%;
            position: relative;
            overflow: hidden;
            transition: var(--home-transition);
            box-shadow: var(--home-shadow-lg);
            cursor: pointer;
            text-decoration: none;
            color: inherit;
            display: block;
            backdrop-filter: blur(10px);
        }

        .dashboard-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, transparent 100%);
            transition: var(--home-transition);
            opacity: 0;
        }

        .dashboard-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 16px 40px rgba(0, 0, 0, 0.6);
            border-color: var(--home-border-light);
            text-decoration: none;
            color: inherit;
        }

        .dashboard-card:hover::before {
            opacity: 1;
        }

        .dashboard-card:focus {
            outline: 2px solid var(--home-info-light);
            outline-offset: 2px;
            text-decoration: none;
        }

        .card-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1.5rem;
            transition: var(--home-transition);
            box-shadow: var(--home-shadow-md);
            border: 1px solid var(--home-border);
        }

        .card-icon i {
            font-size: 2.5rem;
            color: white;
            transition: var(--home-transition);
        }

        .dashboard-card:hover .card-icon {
            transform: scale(1.1);
            box-shadow: var(--home-shadow-lg);
        }

        .card-content h3 {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--home-text-primary);
            margin-bottom: 0.5rem;
            transition: var(--home-transition);
        }

        .card-content p {
            color: var(--home-text-secondary);
            margin-bottom: 1.5rem;
            font-weight: 400;
            line-height: 1.6;
        }

        /* Mantener colores consistentes en enlaces */
        .dashboard-card:hover .card-content h3 {
            color: var(--home-text-primary);
        }

        .dashboard-card:hover .card-content p {
            color: var(--home-text-secondary);
        }

        .dashboard-card:visited .card-content h3 {
            color: var(--home-text-primary);
        }

        .dashboard-card:visited .card-content p {
            color: var(--home-text-secondary);
        }

        .card-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--home-info-light);
            text-decoration: none;
            font-weight: 500;
            transition: var(--home-transition);
            pointer-events: none;
            padding: 0.5rem 1rem;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid var(--home-border);
            border-radius: var(--home-radius-sm);
            backdrop-filter: blur(5px);
        }

        .dashboard-card:hover .card-btn {
            color: var(--home-text-primary);
            transform: translateX(5px);
            background: rgba(255, 255, 255, 0.1);
            border-color: var(--home-border-light);
        }

        .card-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: translateX(-100%);
            transition: transform 0.6s ease;
            z-index: 1;
        }

        .dashboard-card:hover .card-overlay {
            transform: translateX(100%);
        }

        /* Efecto shimmer para indicar que es clickeable */
        .dashboard-card::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.02) 0%, rgba(255, 255, 255, 0.08) 100%);
            opacity: 0;
            transition: var(--home-transition);
            pointer-events: none;
        }

        .dashboard-card:hover::after {
            opacity: 1;
        }

        /* Mejorar el indicador de foco para accesibilidad */
        .dashboard-card:focus-visible {
            outline: 3px solid var(--home-info-light);
            outline-offset: 3px;
        }

        /* ========================
           COLORES ESPECÍFICOS DE TARJETAS - ESTILO COCINA
           ======================== */
        .card-orders .card-icon { 
            background: linear-gradient(135deg, var(--home-success) 0%, var(--home-success-light) 100%); 
        }
        .card-orders:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(5, 150, 105, 0.1) 100%); 
        }

        .card-products .card-icon { 
            background: linear-gradient(135deg, var(--home-info) 0%, var(--home-info-light) 100%); 
        }
        .card-products:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(8, 145, 178, 0.1) 100%); 
        }

        .card-tables .card-icon { 
            background: linear-gradient(135deg, var(--home-warning) 0%, var(--home-warning-light) 100%); 
        }
        .card-tables:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(217, 119, 6, 0.1) 100%); 
        }

        .card-users .card-icon { 
            background: linear-gradient(135deg, var(--home-purple) 0%, var(--home-purple-light) 100%); 
        }
        .card-users:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(124, 58, 237, 0.1) 100%); 
        }

        .card-categories .card-icon { 
            background: linear-gradient(135deg, var(--home-pink) 0%, var(--home-pink-light) 100%); 
        }
        .card-categories:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(219, 39, 119, 0.1) 100%); 
        }

        .card-stations .card-icon { 
            background: linear-gradient(135deg, var(--home-danger) 0%, var(--home-danger-light) 100%); 
        }
        .card-stations:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(220, 38, 38, 0.1) 100%); 
        }

        .card-areas .card-icon { 
            background: linear-gradient(135deg, var(--home-teal) 0%, var(--home-teal-light) 100%); 
        }
        .card-areas:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(13, 148, 136, 0.1) 100%); 
        }

        .card-companies .card-icon { 
            background: linear-gradient(135deg, var(--home-bg-tertiary) 0%, var(--home-surface) 100%); 
        }
        .card-companies:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(71, 85, 105, 0.1) 100%); 
        }

        .card-branches .card-icon { 
            background: linear-gradient(135deg, var(--home-primary) 0%, var(--home-primary-dark) 100%); 
        }
        .card-branches:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(30, 64, 175, 0.1) 100%); 
        }

        .card-station-work .card-icon { 
            background: linear-gradient(135deg, var(--home-info) 0%, var(--home-primary) 100%); 
        }
        .card-station-work:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(8, 145, 178, 0.1) 100%); 
        }

        /* ========================
           ESTILOS DE TARJETAS DE SEGURIDAD
           ======================== */
        .security-section {
            background: linear-gradient(135deg, rgba(220, 38, 38, 0.1) 0%, rgba(124, 58, 237, 0.1) 100%);
            border-radius: var(--home-radius-lg);
            padding: 2rem;
            margin-bottom: 2rem;
            border: 1px solid rgba(220, 38, 38, 0.2);
        }

        .security-section h2 {
            color: #ff6b6b;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        .security-section p {
            color: var(--home-text-secondary);
        }

        /* Tarjeta de Usuarios y Roles (principal) */
        .card-users-management .card-icon { 
            background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 100%); 
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
        }
        .card-users-management:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(255, 107, 107, 0.15) 100%);
            border: 1px solid rgba(255, 107, 107, 0.3);
            box-shadow: 0 8px 25px rgba(255, 107, 107, 0.3);
        }

        .card-users-management .card-badge {
            position: absolute;
            top: 1rem;
            right: 1rem;
            z-index: 2;
        }

        /* Tarjeta de Asignaciones de Personal */
        .card-user-assignments .card-icon { 
            background: linear-gradient(135deg, #9b59b6 0%, #bb7bd6 100%); 
            box-shadow: 0 4px 15px rgba(155, 89, 182, 0.4);
        }
        .card-user-assignments:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(155, 89, 182, 0.15) 100%);
            border: 1px solid rgba(155, 89, 182, 0.3);
            box-shadow: 0 8px 25px rgba(155, 89, 182, 0.3);
        }

        .card-user-assignments .card-badge {
            position: absolute;
            top: 1rem;
            right: 1rem;
            z-index: 2;
        }

        /* Tarjetas de Seguridad */
        .card-security-primary .card-icon-security { 
            background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 100%); 
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
        }
        .card-security-primary:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(255, 107, 107, 0.15) 100%);
            border: 1px solid rgba(255, 107, 107, 0.3);
            box-shadow: 0 8px 25px rgba(255, 107, 107, 0.3);
        }

        .card-security-secondary .card-icon-security { 
            background: linear-gradient(135deg, #4ecdc4 0%, #6ee7dd 100%); 
            box-shadow: 0 4px 15px rgba(78, 205, 196, 0.4);
        }
        .card-security-secondary:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(78, 205, 196, 0.15) 100%);
            border: 1px solid rgba(78, 205, 196, 0.3);
            box-shadow: 0 8px 25px rgba(78, 205, 196, 0.3);
        }

        .card-security-tertiary .card-icon-security { 
            background: linear-gradient(135deg, #ffd93d 0%, #ffe66a 100%); 
            box-shadow: 0 4px 15px rgba(255, 217, 61, 0.4);
        }
        .card-security-tertiary:hover { 
            background: linear-gradient(135deg, var(--home-bg-secondary) 0%, rgba(255, 217, 61, 0.15) 100%);
            border: 1px solid rgba(255, 217, 61, 0.3);
            box-shadow: 0 8px 25px rgba(255, 217, 61, 0.3);
        }

        /* Iconos de seguridad */
        .card-icon-security {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1.5rem;
            transition: var(--home-transition);
            position: relative;
            overflow: hidden;
        }

        .card-icon-security i {
            font-size: 2.5rem;
            color: white;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            z-index: 2;
            position: relative;
        }

        .card-icon-security::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, transparent 0%, rgba(255, 255, 255, 0.2) 50%, transparent 100%);
            opacity: 0;
            transition: var(--home-transition);
        }

        .dashboard-card:hover .card-icon-security::before {
            opacity: 1;
            animation: shimmer 1.5s ease-in-out infinite;
        }

        @@keyframes shimmer {
            0%, 100% { transform: translateX(-100%); }
            50% { transform: translateX(100%); }
        }

        /* Features badges */
        .security-features {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin: 1rem 0;
        }

        .feature-badge {
            background: rgba(255, 255, 255, 0.1);
            color: var(--home-text-secondary);
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: var(--home-transition);
        }

        .dashboard-card:hover .feature-badge {
            background: rgba(255, 255, 255, 0.2);
            color: var(--home-text-primary);
            border-color: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }

        /* Overlay de seguridad */
        .card-overlay-security {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(255, 107, 107, 0.1) 0%, rgba(124, 58, 237, 0.1) 100%);
            opacity: 0;
            transition: var(--home-transition);
            pointer-events: none;
        }

        .dashboard-card:hover .card-overlay-security {
            opacity: 1;
        }

        /* ========================
           RESPONSIVE DESIGN - ESTILO COCINA
           ======================== */
        @@media (max-width: 768px) {
            .hero-text h1 {
                font-size: 2.5rem;
            }
            
            .hero-text p {
                font-size: 1.2rem;
            }
            
            .hero-stats {
                justify-content: center;
                gap: 1rem;
            }
            
            .stat-item {
                padding: 0.5rem 1rem;
                font-size: 0.9rem;
            }
            
            .section-header h2 {
                font-size: 2rem;
            }
            
            .dashboard-card {
                padding: 1.5rem;
                margin-bottom: 1rem;
            }
            
            .card-icon {
                width: 60px;
                height: 60px;
            }
            
            .card-icon i {
                font-size: 2rem;
            }
        }

        /* Optimización para dispositivos táctiles */
        @@media (hover: none) and (pointer: coarse) {
            .dashboard-card:hover {
                transform: none;
                box-shadow: var(--home-shadow-lg);
            }
            
            .dashboard-card:active {
                transform: scale(0.98);
                transition: transform 0.1s ease;
            }
            
            .dashboard-card:hover .card-btn {
                transform: none;
            }
            
            .dashboard-card:hover .card-icon {
                transform: none;
            }
        }

        @@media (max-width: 480px) {
            .hero-content {
                padding: 0 1rem;
            }
            
            .hero-text h1 {
                font-size: 2rem;
            }
            
            .hero-text p {
                font-size: 1rem;
            }
            
            .hero-stats {
                flex-direction: column;
                align-items: center;
                gap: 0.75rem;
            }
            
            .stat-item {
                width: 100%;
                justify-content: center;
            }
            
            .dashboard-container {
                padding: 1rem 0;
            }
            
            .dashboard-card {
                padding: 1rem;
            }
            
            .card-icon {
                width: 50px;
                height: 50px;
            }
            
            .card-icon i {
                font-size: 1.5rem;
            }
            
            .card-content h3 {
                font-size: 1.25rem;
            }
            
            .card-content p {
                font-size: 0.9rem;
            }
        }

        /* ========================
           NUEVAS CARDS - COLORES ESPECÍFICOS POR ROL
           ======================== */
        .card-payments {
            background: linear-gradient(135deg, var(--home-success) 0%, var(--home-success-light) 100%);
        }

        .card-payments:hover {
            transform: translateY(-8px);
            box-shadow: var(--home-shadow-lg);
        }

        .card-kitchen {
            background: linear-gradient(135deg, var(--home-warning) 0%, var(--home-warning-light) 100%);
        }

        .card-kitchen:hover {
            transform: translateY(-8px);
            box-shadow: var(--home-shadow-lg);
        }

        .card-inventory {
            background: linear-gradient(135deg, var(--home-purple) 0%, var(--home-purple-light) 100%);
        }

        .card-inventory:hover {
            transform: translateY(-8px);
            box-shadow: var(--home-shadow-lg);
        }

        .card-reports {
            background: linear-gradient(135deg, var(--home-info) 0%, var(--home-info-light) 100%);
        }

        .card-reports:hover {
            transform: translateY(-8px);
            box-shadow: var(--home-shadow-lg);
        }

        /* ========================
           INDICADORES DE ROL ESPECÍFICO
           ======================== */
        .role-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(255, 255, 255, 0.2);
            color: var(--home-text-primary);
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            backdrop-filter: blur(8px);
        }

        .role-admin { border-left: 4px solid var(--home-danger); }
        .role-manager { border-left: 4px solid var(--home-primary); }
        .role-supervisor { border-left: 4px solid var(--home-warning); }
        .role-waiter { border-left: 4px solid var(--home-success); }
        .role-cashier { border-left: 4px solid var(--home-info); }
        .role-chef { border-left: 4px solid var(--home-warning); }
        .role-bartender { border-left: 4px solid var(--home-teal); }
        .role-inventory { border-left: 4px solid var(--home-purple); }
        .role-accountant { border-left: 4px solid var(--home-success); }
        .role-support { border-left: 4px solid var(--home-info); }

        /* ========================
           ANIMACIONES DE CARDS ESPECÍFICAS POR ROL
           ======================== */
        .dashboard-card[data-role="admin"] {
            animation: pulse-admin 2s ease-in-out infinite;
        }

        .dashboard-card[data-role="manager"] {
            animation: pulse-manager 2s ease-in-out infinite;
        }

        @@keyframes pulse-admin {
            0%, 100% { box-shadow: 0 0 0 0 rgba(220, 38, 38, 0.4); }
            50% { box-shadow: 0 0 0 10px rgba(220, 38, 38, 0); }
        }

        @@keyframes pulse-manager {
            0%, 100% { box-shadow: 0 0 0 0 rgba(30, 64, 175, 0.4); }
            50% { box-shadow: 0 0 0 10px rgba(30, 64, 175, 0); }
        }
    </style>
}

@section Scripts {
    <script>
        // Información del usuario y rol actual
        const userInfo = {
            id: '@Model.UserInfo.Id',
            name: '@Model.UserInfo.Name',
            role: '@Model.UserInfo.Role',
            isAuthenticated: @Model.UserInfo.IsAuthenticated.ToString().ToLower()
        };

        // Configuración de cards visibles
        const visibleCards = {
            orders: @Model.VisibleCards.Orders.ToString().ToLower(),
            products: @Model.VisibleCards.Products.ToString().ToLower(),
            tables: @Model.VisibleCards.Tables.ToString().ToLower(),
            userManagement: @Model.VisibleCards.UserManagement.ToString().ToLower(),
            categories: @Model.VisibleCards.Categories.ToString().ToLower(),
            stations: @Model.VisibleCards.Stations.ToString().ToLower(),
            areas: @Model.VisibleCards.Areas.ToString().ToLower(),
            companies: @Model.VisibleCards.Companies.ToString().ToLower(),
            branches: @Model.VisibleCards.Branches.ToString().ToLower(),
            kitchen: @Model.VisibleCards.Kitchen.ToString().ToLower(),
            payments: @Model.VisibleCards.Payments.ToString().ToLower(),
            reports: @Model.VisibleCards.Reports.ToString().ToLower(),
            inventory: @Model.VisibleCards.Inventory.ToString().ToLower(),
            suppliers: @Model.VisibleCards.Suppliers.ToString().ToLower(),
            purchaseOrders: @Model.VisibleCards.PurchaseOrders.ToString().ToLower(),
            securityAdmin: @Model.VisibleCards.SecurityAdmin.ToString().ToLower()
        };

        // Función para obtener el nombre amigable del rol
        function getFriendlyRoleName(role) {
            const roleNames = {
                'admin': 'Administrador',
                'manager': 'Gerente',
                'supervisor': 'Supervisor',
                'waiter': 'Mesero',
                'cashier': 'Cajero',
                'chef': 'Cocinero',
                'bartender': 'Bartender',
                'inventory': 'Inventarista',
                'accountant': 'Contador',
                'support': 'Soporte Técnico'
            };
            return roleNames[role.toLowerCase()] || role;
        }

        // Función para contar cards visibles
        function countVisibleCards() {
            return Object.values(visibleCards).filter(visible => visible).length;
        }

        // Mostrar información del dashboard en la consola (para desarrollo)
        console.log('=== RESTBAR DASHBOARD ===');
        console.log('Usuario:', userInfo.name);
        console.log('Rol:', getFriendlyRoleName(userInfo.role));
        console.log('Cards visibles:', countVisibleCards());
        console.log('Configuración de visibilidad:', visibleCards);

        // Agregar indicadores visuales de rol
        document.addEventListener('DOMContentLoaded', function() {
            // Agregar clase de rol al body para estilos específicos
            document.body.classList.add('role-' + userInfo.role.toLowerCase());
            
            // Agregar data-role a las cards para animaciones específicas
            const cards = document.querySelectorAll('.dashboard-card');
            cards.forEach(card => {
                card.setAttribute('data-role', userInfo.role.toLowerCase());
            });
            
            // Mostrar tooltip con información del rol
            const heroText = document.querySelector('.hero-text');
            if (heroText) {
                const roleInfo = document.createElement('div');
                roleInfo.className = 'role-info';
                roleInfo.innerHTML = `
                    <div class="role-badge role-${userInfo.role.toLowerCase()}">
                        ${getFriendlyRoleName(userInfo.role)}
                    </div>
                    <small>Tienes acceso a ${countVisibleCards()} módulos</small>
                `;
                roleInfo.style.cssText = `
                    position: absolute;
                    top: 20px;
                    right: 20px;
                    text-align: center;
                    background: rgba(255, 255, 255, 0.1);
                    padding: 1rem;
                    border-radius: 12px;
                    backdrop-filter: blur(10px);
                    border: 1px solid rgba(255, 255, 255, 0.2);
                `;
                heroText.parentElement.style.position = 'relative';
                heroText.parentElement.appendChild(roleInfo);
            }
        });

        // Función para redireccionar con verificación de permisos
        function redirectIfAllowed(url, permission) {
            if (visibleCards[permission]) {
                window.location.href = url;
            } else {
                alert('No tienes permisos para acceder a esta funcionalidad.');
            }
        }

        // Exponer funciones globalmente para uso en otras partes
        window.RestBar = {
            userInfo: userInfo,
            visibleCards: visibleCards,
            getFriendlyRoleName: getFriendlyRoleName,
            countVisibleCards: countVisibleCards,
            redirectIfAllowed: redirectIfAllowed
        };
    </script>
}
